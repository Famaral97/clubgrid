"""add meta conditions

Revision ID: f056f19a22f5
Revises: 2e607728b518
Create Date: 2025-03-24 14:36:36.302042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import table, column, Integer

# revision identifiers, used by Alembic.
revision: str = 'f056f19a22f5'
down_revision: Union[str, None] = '2e607728b518'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('meta_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('expression', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('grids', sa.Column('meta_condition_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'grids', 'meta_conditions', ['meta_condition_id'], ['id'])
    # ### end Alembic commands ###

    # Update existing entries
    your_table = table('grids', column('meta_condition_id', Integer))
    op.execute(your_table.update().values({'meta_condition_id': 1}))


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'grids', type_='foreignkey')
    op.drop_column('grids', 'meta_condition_id')
    op.drop_table('meta_conditions')
    # ### end Alembic commands ###
