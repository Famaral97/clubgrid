"""first commit of second version

Revision ID: b36fcc12bacc
Revises: 
Create Date: 2025-05-09 09:28:08.591348

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'b36fcc12bacc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clubs',
                    sa.Column('id', sa.String(length=255), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('logo', sa.String(length=255), nullable=True),
                    sa.Column('country', sa.String(length=255), nullable=True),
                    sa.Column('name_has_number', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_animal', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_winged_animal', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_person', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_football', sa.Boolean(), nullable=True),
                    sa.Column('logo_is_circular', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_crown', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_numbers', sa.Boolean(), nullable=True),
                    sa.Column('num_stars_in_logo', sa.Integer(), nullable=True),
                    sa.Column('num_colors_in_logo', sa.String(length=50), nullable=True),
                    sa.Column('logo_has_red', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_blue', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_green', sa.Boolean(), nullable=True),
                    sa.Column('logo_has_black', sa.Boolean(), nullable=True),
                    sa.Column('in_capital', sa.Boolean(), nullable=True),
                    sa.Column('league_titles', sa.Integer(), nullable=True),
                    sa.Column('league_2024_25', sa.String(length=255), nullable=True),
                    sa.Column('league_2023_24', sa.String(length=255), nullable=True),
                    sa.Column('league_2022_23', sa.String(length=255), nullable=True),
                    sa.Column('domestic_cup_titles', sa.Integer(), nullable=True),
                    sa.Column('domestic_cup_runner_up', sa.Integer(), nullable=True),
                    sa.Column('domestic_supercup_titles', sa.Integer(), nullable=True),
                    sa.Column('domestic_supercup_runner_up', sa.Integer(), nullable=True),
                    sa.Column('champions_league_2024_25', sa.Boolean(), nullable=True),
                    sa.Column('champions_league_titles', sa.Integer(), nullable=True),
                    sa.Column('champions_league_runner_up', sa.Integer(), nullable=True),
                    sa.Column('europa_league_2024_25', sa.Boolean(), nullable=True),
                    sa.Column('europa_league_titles', sa.Integer(), nullable=True),
                    sa.Column('europa_league_runner_up', sa.Integer(), nullable=True),
                    sa.Column('cups_winners_cup_titles', sa.Integer(), nullable=True),
                    sa.Column('cups_winners_cup_runner_up', sa.Integer(), nullable=True),
                    sa.Column('uefa_super_cup_titles', sa.Integer(), nullable=True),
                    sa.Column('uefa_super_cup_runner_up', sa.Integer(), nullable=True),
                    sa.Column('club_world_cup_titles', sa.Integer(), nullable=True),
                    sa.Column('club_world_cup_runner_up', sa.Integer(), nullable=True),
                    sa.Column('best_club_awards', sa.Integer(), nullable=True),
                    sa.Column('best_club_runner_up', sa.Integer(), nullable=True),
                    sa.Column('best_club_third_place', sa.Integer(), nullable=True),
                    sa.Column('instagram_followers', sa.Integer(), nullable=True),
                    sa.Column('legal_name', sa.String(length=255), nullable=True),
                    sa.Column('foundation_year', sa.Integer(), nullable=True),
                    sa.Column('most_valuable_player', sa.Float(), nullable=True),
                    sa.Column('oldest_player', sa.Integer(), nullable=True),
                    sa.Column('most_expensive_entry', sa.Float(), nullable=True),
                    sa.Column('most_expensive_exit', sa.Float(), nullable=True),
                    sa.Column('squad_size', sa.Integer(), nullable=True),
                    sa.Column('average_age', sa.Float(), nullable=True),
                    sa.Column('foreigners_count', sa.Integer(), nullable=True),
                    sa.Column('foreigners_percentage', sa.Float(), nullable=True),
                    sa.Column('national_team_players', sa.Integer(), nullable=True),
                    sa.Column('stadium_name', sa.String(length=255), nullable=True),
                    sa.Column('stadium_capacity', sa.Integer(), nullable=True),
                    sa.Column('total_market_value', sa.Float(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('conditions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('description', sa.String(length=255), nullable=True),
                    sa.Column('expression', sa.Text(), nullable=True),
                    sa.Column('tag', sa.String(length=255), nullable=True),
                    sa.Column('deprecated', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('grid_types',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('description', sa.String(length=255), nullable=True),
                    sa.Column('expression', sa.String(length=255), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('grids',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('starting_date', sa.DateTime(), nullable=True),
                    sa.Column('type_id', sa.Integer(), nullable=True),
                    sa.Column('local_id', sa.Integer(), nullable=True),
                    sa.Column('row_condition_1', sa.Integer(), nullable=True),
                    sa.Column('row_condition_2', sa.Integer(), nullable=True),
                    sa.Column('row_condition_3', sa.Integer(), nullable=True),
                    sa.Column('column_condition_1', sa.Integer(), nullable=True),
                    sa.Column('column_condition_2', sa.Integer(), nullable=True),
                    sa.Column('column_condition_3', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['column_condition_1'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['column_condition_2'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['column_condition_3'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['row_condition_1'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['row_condition_2'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['row_condition_3'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['type_id'], ['grid_types.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('answers',
                    sa.Column('grid_id', sa.Integer(), nullable=False),
                    sa.Column('row_condition_id', sa.Integer(), nullable=False),
                    sa.Column('column_condition_id', sa.Integer(), nullable=False),
                    sa.Column('club_id', sa.String(length=255), nullable=False),
                    sa.Column('count', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
                    sa.ForeignKeyConstraint(['column_condition_id'], ['conditions.id'], ),
                    sa.ForeignKeyConstraint(['grid_id'], ['grids.id'], ),
                    sa.ForeignKeyConstraint(['row_condition_id'], ['conditions.id'], ),
                    sa.PrimaryKeyConstraint('grid_id', 'row_condition_id', 'column_condition_id', 'club_id')
                    )

    op.create_foreign_key('grids_ibfk', 'grids', 'grid_types', ['type_id'], ['id'])

    op.create_table('tag_exclusions',
                    sa.Column('grid_type_id', sa.Integer(), nullable=False),
                    sa.Column('tag', sa.String(length=255), nullable=False),
                    sa.ForeignKeyConstraint(['grid_type_id'], ['grid_types.id'], ),
                    sa.PrimaryKeyConstraint('grid_type_id', 'tag')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('grids_ibfk_7', 'grids', type_='foreignkey')

    op.drop_table('tag_exclusions')
    op.drop_table('answers')
    op.drop_table('grids')
    op.drop_table('grid_types')
    op.drop_table('conditions')
    op.drop_table('clubs')
    # ### end Alembic commands ###
